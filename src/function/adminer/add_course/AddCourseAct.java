package function.adminer.add_course;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import data.Course;
import data.user.Teacher;
import function.adminer.add_course.select_teacher.SelectTeacherAct;
import function.adminer.add_course.select_teacher.SelectTeacherPresenter;
import kotlin.Pair;
import org.jetbrains.annotations.NotNull;
import util.JFrameUtilKt;
import util.StackFrame;

import javax.swing.*;
import java.awt.*;
import java.util.Vector;

/**
 * Created by qiao1 on 2017/1/2.
 */
public class AddCourseAct extends StackFrame {
    private JTextField mTfCourseNo;
    private JTextField mTfCoursename;
    private JTextArea mTaDesc;
    private JTextField mTfCapacity;
    private JButton mBtnAddTeacher;
    private JTextField mTfTerm;
    private JButton mBtnPublish;
    private JButton mBtnCancel;
    private JLabel mLabelTeachers;
    private JPanel mPanelRoot;

    private Vector<Teacher> selected;

    private AddCoursePresenter mPresenter;

    public AddCourseAct(AddCoursePresenter presenter) {
        super("发布课程");
        this.mPresenter = presenter;
        setContentPane(mPanelRoot);
        JFrameUtilKt.init(this, 450, 600);
        initEvent();
    }

    private void initEvent() {
        mBtnCancel.addActionListener(l -> dispose());
        mBtnAddTeacher.addActionListener(l -> {
            openSelectTeacherAct();
        });
        mBtnPublish.addActionListener(l -> {
            if (mPresenter.addCourse(getInputInfo()) == 0) {
                JOptionPane.showMessageDialog(this, "发布课程成功!");
            } else {
                JOptionPane.showMessageDialog(this, "无法发布此课程！");
            }
        });
    }

    private SelectTeacherAct mSelectTeacherAct;

    private void openSelectTeacherAct() {
        mSelectTeacherAct = new SelectTeacherAct(new SelectTeacherPresenter());
        hide();
    }

    @Override
    public void onOtherDispose(@NotNull StackFrame stackFrame) {
        super.onOtherDispose(stackFrame);
        if (stackFrame == mSelectTeacherAct) {  //如果是SelectTeacherAct
            show();
        }
    }

    @Override
    public void onSubmitData(int submit_code, @NotNull Object data, @NotNull StackFrame submiter) {
        super.onSubmitData(submit_code, data, submiter);
        if (submit_code == 0x123) {  //是选择教师界面传来的信息
            selected = (Vector<Teacher>) data;
            showSelectedTeachers(selected);
        }
    }

    /**
     * 获获取输入信息
     */
    private Pair<Course, Vector<Teacher>> getInputInfo() {
        Course course = new Course(mTfCourseNo.getText(),
                mTfCoursename.getText(),
                mTaDesc.getText(),
                Integer.parseInt(mTfCapacity.getText()),
                mTfTerm.getText(),
                0);
        Pair<Course, Vector<Teacher>> pair =
                new Pair<Course, Vector<Teacher>>(course, selected);
        return pair;
    }

    /**
     * 显示被选择的教师
     *
     * @param selected
     */
    private void showSelectedTeachers(Vector<Teacher> selected) {
        String show = "";
        for (Teacher teacher : selected) {
            show = show + "(" + teacher.getNo() + "、" + teacher.getName() + "、" + teacher.getSex() + ") ";
        }
        mLabelTeachers.setText(show);
    }

    public static void main(String[] args) {
        new AddCourseAct(new AddCoursePresenter());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mPanelRoot = new JPanel();
        mPanelRoot.setLayout(new GridLayoutManager(7, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mPanelRoot.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setFont(new Font(label1.getFont().getName(), label1.getFont().getStyle(), 18));
        label1.setText("课程号");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mTfCourseNo = new JTextField();
        mTfCourseNo.setFont(new Font(mTfCourseNo.getFont().getName(), mTfCourseNo.getFont().getStyle(), 18));
        panel1.add(mTfCourseNo, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mPanelRoot.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setFont(new Font(label2.getFont().getName(), label2.getFont().getStyle(), 18));
        label2.setText("课程名");
        panel2.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mTfCoursename = new JTextField();
        mTfCoursename.setFont(new Font(mTfCoursename.getFont().getName(), mTfCoursename.getFont().getStyle(), 18));
        panel2.add(mTfCoursename, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mPanelRoot.add(panel3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setFont(new Font(label3.getFont().getName(), label3.getFont().getStyle(), 18));
        label3.setText("课容量");
        panel3.add(label3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mTfCapacity = new JTextField();
        mTfCapacity.setFont(new Font(mTfCapacity.getFont().getName(), mTfCapacity.getFont().getStyle(), 18));
        panel3.add(mTfCapacity, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        mPanelRoot.add(panel4, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setFont(new Font(label4.getFont().getName(), label4.getFont().getStyle(), 18));
        label4.setText("任课教师");
        panel4.add(label4, BorderLayout.WEST);
        mLabelTeachers = new JLabel();
        mLabelTeachers.setFont(new Font(mLabelTeachers.getFont().getName(), mLabelTeachers.getFont().getStyle(), 18));
        mLabelTeachers.setText("");
        panel4.add(mLabelTeachers, BorderLayout.CENTER);
        mBtnAddTeacher = new JButton();
        mBtnAddTeacher.setFont(new Font(mBtnAddTeacher.getFont().getName(), mBtnAddTeacher.getFont().getStyle(), 18));
        mBtnAddTeacher.setText("添加教师");
        panel4.add(mBtnAddTeacher, BorderLayout.EAST);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mPanelRoot.add(panel5, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setFont(new Font(label5.getFont().getName(), label5.getFont().getStyle(), 18));
        label5.setText("课程描述");
        panel5.add(label5, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mTaDesc = new JTextArea();
        mTaDesc.setFont(new Font(mTaDesc.getFont().getName(), mTaDesc.getFont().getStyle(), 18));
        mTaDesc.setText("请输入课程描述...");
        panel5.add(mTaDesc, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mPanelRoot.add(panel6, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setFont(new Font(label6.getFont().getName(), label6.getFont().getStyle(), 18));
        label6.setText("学期");
        panel6.add(label6, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mTfTerm = new JTextField();
        mTfTerm.setFont(new Font(mTfTerm.getFont().getName(), mTfTerm.getFont().getStyle(), 18));
        panel6.add(mTfTerm, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        mPanelRoot.add(panel7, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        mBtnPublish = new JButton();
        mBtnPublish.setBackground(new Color(-15181229));
        mBtnPublish.setFont(new Font(mBtnPublish.getFont().getName(), mBtnPublish.getFont().getStyle(), 18));
        mBtnPublish.setText("发布");
        panel7.add(mBtnPublish, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mBtnCancel = new JButton();
        mBtnCancel.setFont(new Font(mBtnCancel.getFont().getName(), mBtnCancel.getFont().getStyle(), 18));
        mBtnCancel.setText("取消");
        panel7.add(mBtnCancel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel7.add(spacer1, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel7.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mPanelRoot;
    }
}
